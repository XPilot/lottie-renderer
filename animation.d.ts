/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * In Point of the Time Ruler. Sets the initial Frame of the animation.
 */
export type InPoint = number
/**
 * Out Point of the Time Ruler. Sets the final Frame of the animation
 */
export type OutPoint = number
/**
 * Frame Rate
 */
export type FrameRate = number
/**
 * Composition Width
 */
export type Width = number
/**
 * Composition Height
 */
export type Height = number
/**
 * Bodymovin Version
 */
export type Version = string
/**
 * Type of layer: Shape. Value 4.
 */
export type Type = number
/**
 * Transform properties
 */
export type Transform = {
  a?: AnchorPoint
  p?: Position
  s?: Scale
  r?: Rotation
  o?: Opacity
  px?: PositionX
  py?: PositionY
  [k: string]: any
}
/**
 * Transform Anchor Point
 */
export type AnchorPoint =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Transform Position
 */
export type Position =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Transform Scale
 */
export type Scale =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Transform Rotation
 */
export type Rotation =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Transform Opacity
 */
export type Opacity =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Transform Position X
 */
export type PositionX =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Transform Position Y
 */
export type PositionY =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Blend Mode
 */
export type BlendMode =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * 3d layer flag
 */
export type TDLayer =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index = number
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class = string
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHtmlId = string
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint1 = number
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint1 = number
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime = number
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name = number
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking maskProperties.
 */
export type HasMasks = number
/**
 * Inverted Mask flag
 */
export type Inverted = boolean
/**
 * Mask name. Used for expressions and effects.
 */
export type Name1 = string
/**
 * Mask vertices
 */
export type Points = (
  | {
      /**
       * Property Value
       */
      k?: {
        /**
         * Closed property of shape
         */
        0?: boolean
        /**
         * Bezier curve In points. Array of 2 dimensional arrays.
         */
        1?: any[]
        /**
         * Bezier curve Out points. Array of 2 dimensional arrays.
         */
        2?: any[]
        /**
         * Bezier curve Vertices. Array of 2 dimensional arrays.
         */
        3?: any[]
        [k: string]: any
      }
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    })[]
/**
 * Mask opacity.
 */
export type Opacity1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Mask mode. Not all mask types are supported.
 */
export type Mode =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * List of Masks
 */
export type MaskProperties = {
  inv?: Inverted
  nm?: Name1
  pt?: Points
  o?: Opacity1
  mode?: Mode
  [k: string]: any
}[]
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name2 = string
/**
 * Effect type. Value:0.
 */
export type Type1 = number
/**
 * Effect value.
 */
export type Value =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Effect Index. Used for expressions. NOT USED. EQUALS SLIDER.
 */
export type EffectIndex1 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName1 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name3 = string
/**
 * Effect type. Value:0.
 */
export type Type2 = number
/**
 * Effect value.
 */
export type Value1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex2 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName2 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name4 = string
/**
 * Effect type. Value:2.
 */
export type Type3 = number
/**
 * Effect value.
 */
export type Value2 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex3 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName3 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name5 = string
/**
 * Effect type. Value:2.
 */
export type Type4 = number
/**
 * Effect value.
 */
export type Value3 = (
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    })[]
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex4 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName4 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name6 = string
/**
 * Effect type. Value:7.
 */
export type Type5 = number
/**
 * Effect value.
 */
export type Value4 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex5 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName5 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name7 = string
/**
 * Effect type. Value:5.
 */
export type Type6 = number
/**
 * Effect List of properties.
 */
export type Effects = (
  | {
      ix?: EffectIndex
      mn?: MatchName
      nm?: Name2
      ty?: Type1
      v?: Value
      [k: string]: any
    }
  | {
      ix?: EffectIndex1
      mn?: MatchName1
      nm?: Name3
      ty?: Type2
      v?: Value1
      [k: string]: any
    }
  | {
      ix?: EffectIndex2
      mn?: MatchName2
      nm?: Name4
      ty?: Type3
      v?: Value2
      [k: string]: any
    }
  | {
      ix?: EffectIndex3
      mn?: MatchName3
      nm?: Name5
      ty?: Type4
      v?: Value3
      [k: string]: any
    }
  | {
      ix?: EffectIndex4
      mn?: MatchName4
      nm?: Name6
      ty?: Type5
      v?: Value4
      [k: string]: any
    }
  | {
      ix?: EffectIndex5
      mn?: MatchName5
      nm?: Name7
      ty?: Type6
      ef?: Effects
      /**
       * Enabled AE property value
       */
      en?: number
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex6
      mn?: MatchName6
      nm?: Name8
      ty?: Type7
      v?: Value5
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex7
      mn?: MatchName7
      nm?: Name9
      ty?: Type8
      v?: Value6
      [k: string]: any
    }
  | {
      ix?: EffectIndex8
      mn?: MatchName8
      nm?: Name10
      ty?: Type9
      ef?: Effects1
      [k: string]: any
    }
  | {
      ix?: EffectIndex9
      mn?: MatchName9
      nm?: Name11
      ty?: Type10
      ef?: Effects2
      [k: string]: any
    }
  | {
      ix?: EffectIndex10
      mn?: MatchName10
      nm?: Name12
      ty?: Type11
      ef?: Effects3
      [k: string]: any
    }
  | {
      ix?: EffectIndex11
      mn?: MatchName11
      nm?: Name13
      ty?: Type12
      ef?: Effects4
      [k: string]: any
    }
  | {
      ix?: EffectIndex12
      mn?: MatchName12
      nm?: Name14
      ty?: Type13
      ef?: Effects5
      [k: string]: any
    })[]
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex6 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName6 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name8 = string
/**
 * Effect type. Value:7.
 */
export type Type7 = number
/**
 * Effect value.
 */
export type Value5 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Effect Index. Used for expressions. NOT USED. EQUALS SLIDER.
 */
export type EffectIndex7 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName7 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name9 = string
/**
 * Effect type. Value:0.
 */
export type Type8 = number
/**
 * Effect value.
 */
export type Value6 = {
  /**
   * Property Value
   */
  k?: number
  /**
   * Property Expression. An AE expression that modifies the value.
   */
  x?: string
  /**
   * Property Index. Used for expressions.
   */
  ix?: string
  /**
   * Defines if property is animated
   */
  a?: number
  [k: string]: any
}
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex8 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName8 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name10 = string
/**
 * Effect type. Value:20.
 */
export type Type9 = number
/**
 * ffect List of properties.
 */
export type Effects1 = [
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  }
]
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex9 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName9 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name11 = string
/**
 * Effect type. Value:21.
 */
export type Type10 = number
/**
 * Effect List of properties.
 */
export type Effects2 = [
  {
    ix?: EffectIndex3
    mn?: MatchName3
    nm?: Name5
    ty?: Type4
    v?: Value3
    [k: string]: any
  },
  {
    ix?: EffectIndex6
    mn?: MatchName6
    nm?: Name8
    ty?: Type7
    v?: Value5
    [k: string]: any
  },
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex6
    mn?: MatchName6
    nm?: Name8
    ty?: Type7
    v?: Value5
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  }
]
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex10 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName10 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name12 = string
/**
 * Effect type. Value:22.
 */
export type Type11 = number
/**
 * Effect List of properties.
 */
export type Effects3 = [
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex4
    mn?: MatchName4
    nm?: Name6
    ty?: Type5
    v?: Value4
    [k: string]: any
  },
  {
    ix?: EffectIndex4
    mn?: MatchName4
    nm?: Name6
    ty?: Type5
    v?: Value4
    [k: string]: any
  },
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex6
    mn?: MatchName6
    nm?: Name8
    ty?: Type7
    v?: Value5
    [k: string]: any
  },
  {
    ix?: EffectIndex6
    mn?: MatchName6
    nm?: Name8
    ty?: Type7
    v?: Value5
    [k: string]: any
  }
]
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex11 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName11 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name13 = string
/**
 * Effect type. Value:23.
 */
export type Type12 = number
/**
 * Effect List of properties.
 */
export type Effects4 = [
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex2
    mn?: MatchName2
    nm?: Name4
    ty?: Type3
    v?: Value2
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  }
]
/**
 * Effect Index. Used for expressions.
 */
export type EffectIndex12 = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName12 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name14 = string
/**
 * Effect type. Value:23.
 */
export type Type13 = number
/**
 * ffect List of properties.
 */
export type Effects5 = [
  {
    ix?: EffectIndex6
    mn?: MatchName6
    nm?: Name8
    ty?: Type7
    v?: Value5
    [k: string]: any
  },
  any,
  any,
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  any,
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  any,
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  any,
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  any,
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  },
  {
    ix?: EffectIndex
    mn?: MatchName
    nm?: Name2
    ty?: Type1
    v?: Value
    [k: string]: any
  }
]
/**
 * List of Effects
 */
export type Effects6 = (
  | {
      ix?: EffectIndex
      mn?: MatchName
      nm?: Name2
      ty?: Type1
      v?: Value
      [k: string]: any
    }
  | {
      ix?: EffectIndex1
      mn?: MatchName1
      nm?: Name3
      ty?: Type2
      v?: Value1
      [k: string]: any
    }
  | {
      ix?: EffectIndex2
      mn?: MatchName2
      nm?: Name4
      ty?: Type3
      v?: Value2
      [k: string]: any
    }
  | {
      ix?: EffectIndex3
      mn?: MatchName3
      nm?: Name5
      ty?: Type4
      v?: Value3
      [k: string]: any
    }
  | {
      ix?: EffectIndex4
      mn?: MatchName4
      nm?: Name6
      ty?: Type5
      v?: Value4
      [k: string]: any
    }
  | {
      ix?: EffectIndex5
      mn?: MatchName5
      nm?: Name7
      ty?: Type6
      ef?: Effects
      /**
       * Enabled AE property value
       */
      en?: number
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex6
      mn?: MatchName6
      nm?: Name8
      ty?: Type7
      v?: Value5
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex7
      mn?: MatchName7
      nm?: Name9
      ty?: Type8
      v?: Value6
      [k: string]: any
    }
  | {
      ix?: EffectIndex8
      mn?: MatchName8
      nm?: Name10
      ty?: Type9
      ef?: Effects1
      [k: string]: any
    }
  | {
      ix?: EffectIndex9
      mn?: MatchName9
      nm?: Name11
      ty?: Type10
      ef?: Effects2
      [k: string]: any
    }
  | {
      ix?: EffectIndex10
      mn?: MatchName10
      nm?: Name12
      ty?: Type11
      ef?: Effects3
      [k: string]: any
    }
  | {
      ix?: EffectIndex11
      mn?: MatchName11
      nm?: Name13
      ty?: Type12
      ef?: Effects4
      [k: string]: any
    }
  | {
      ix?: EffectIndex12
      mn?: MatchName12
      nm?: Name14
      ty?: Type13
      ef?: Effects5
      [k: string]: any
    })[]
/**
 * Layer Time Stretching
 */
export type Stretch = number
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName13 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name15 = string
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction = number
/**
 * Shape content type. Value: sh
 */
export type Type14 = string
/**
 * Shape's vertices
 */
export type Vertices =
  | {
      /**
       * Property Value
       */
      k?: {
        /**
         * Closed property of shape
         */
        0?: boolean
        /**
         * Bezier curve In points. Array of 2 dimensional arrays.
         */
        1?: any[]
        /**
         * Bezier curve Out points. Array of 2 dimensional arrays.
         */
        2?: any[]
        /**
         * Bezier curve Vertices. Array of 2 dimensional arrays.
         */
        3?: any[]
        [k: string]: any
      }
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName14 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name16 = string
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction1 = number
/**
 * Shape content type. Value: rc
 */
export type Type15 = string
/**
 * Rect's position
 */
export type Position1 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Rect's size
 */
export type Size =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Rect's rounded corners
 */
export type RoundedCorners =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName15 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name17 = string
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction2 = number
/**
 * Shape content type. Value: el
 */
export type Type16 = string
/**
 * Ellipse's position
 */
export type Position2 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Ellipse's size
 */
export type Size1 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName16 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name18 = string
/**
 * After Effect's Direction. Direction how the shape is drawn. Used for trim path for example.
 */
export type Direction3 = number
/**
 * Shape content type. Value: sr
 */
export type Type17 = string
/**
 * Star's position
 */
export type Position3 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Star's outer radius.
 */
export type OuterRadius =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Star's outer roundness.
 */
export type OuterRoundness =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Star's rotation.
 */
export type Rotation1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Star's number of points.
 */
export type Points1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Star's type. Polygon or Star.
 */
export type StarType =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName17 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name19 = string
/**
 * Shape content type. Value: fl
 */
export type Type18 = string
/**
 * Fill Opacity
 */
export type Opacity2 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Fill Color
 */
export type Color =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName18 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name20 = string
/**
 * Shape content type. Value: gf
 */
export type Type19 = string
/**
 * Fill Opacity
 */
export type Opacity3 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient Start Point
 */
export type StartPoint =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient End Point
 */
export type EndPoint =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient Type
 */
export type Type20 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Gradient Highlight Length. Only if type is Radial
 */
export type HighlightLength =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Highlight Angle. Only if type is Radial
 */
export type HighlightAngle =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName19 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name21 = string
/**
 * Shape content type. Value: gs
 */
export type Type21 = string
/**
 * Stroke Opacity
 */
export type Opacity4 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient Start Point
 */
export type StartPoint1 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient End Point
 */
export type EndPoint1 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient Type
 */
export type Type22 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Gradient Highlight Length. Only if type is Radial
 */
export type HighlightLength1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Highlight Angle. Only if type is Radial
 */
export type HighlightAngle1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient Stroke Width
 */
export type StrokeWidth =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Gradient Stroke Line Cap
 */
export type LineCap =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Gradient Stroke Line Join
 */
export type LineJoin =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Gradient Stroke Miter Limit. Only if Line Join is set to Miter.
 */
export type MiterLimit = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName20 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name22 = string
/**
 * Shape content type. Value: st
 */
export type Type23 = string
/**
 * Stroke Line Cap
 */
export type LineCap1 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Stroke Line Join
 */
export type LineJoin1 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Stroke Miter Limit. Only if Line Join is set to Miter.
 */
export type MiterLimit1 = number
/**
 * Stroke Opacity
 */
export type Opacity5 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Stroke Width
 */
export type Width1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Stroke Color
 */
export type Color1 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName21 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name23 = string
/**
 * Shape content type. Value: tm. THIS FEATURE IS NOT SUPPORTED. It's exported because if you export it, they will come.
 */
export type Type24 = string
/**
 * Merge Mode
 */
export type MergeMode = number
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName22 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name24 = string
/**
 * Shape content type. Value: tm
 */
export type Type25 = string
/**
 * Trim Start.
 */
export type Start =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Trim End.
 */
export type End =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Trim Offset.
 */
export type Offset =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * After Effect's Match Name. Used for expressions.
 */
export type MatchName23 = string
/**
 * After Effect's Name. Used for expressions.
 */
export type Name25 = string
/**
 * Shape content type. Value: gr
 */
export type Type26 = string
/**
 * Group number of properties. Used for expressions.
 */
export type NumberOfProperties = number
/**
 * After Effect's Name. Used for expressions.
 */
export type Name26 = string
/**
 * Shape Transform Anchor Point
 */
export type AnchorPoint1 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Shape Transform Position
 */
export type Position4 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Shape Transform Scale
 */
export type Scale1 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Shape Transform Rotation
 */
export type Rotation2 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Shape Transform Opacity
 */
export type Opacity6 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Shape Transform Skew
 */
export type Skew =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Shape Transform Skew Axis
 */
export type SkewAxis =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Group list of items
 */
export type Items = (
  | {
      mn?: MatchName13
      nm?: Name15
      d?: Direction
      ty?: Type14
      ks?: Vertices
      [k: string]: any
    }
  | {
      mn?: MatchName14
      nm?: Name16
      d?: Direction1
      ty?: Type15
      p?: Position1
      s?: Size
      r?: RoundedCorners
      [k: string]: any
    }
  | {
      mn?: MatchName15
      nm?: Name17
      d?: Direction2
      ty?: Type16
      p?: Position2
      s?: Size1
      [k: string]: any
    }
  | {
      mn?: MatchName16
      nm?: Name18
      d?: Direction3
      ty?: Type17
      p?: Position3
      ir?: OuterRadius
      is?: OuterRoundness
      r?: Rotation1
      pt?: Points1
      sy?: StarType
      [k: string]: any
    }
  | {
      mn?: MatchName17
      nm?: Name19
      ty?: Type18
      o?: Opacity2
      c?: Color
      [k: string]: any
    }
  | {
      mn?: MatchName18
      nm?: Name20
      ty?: Type19
      o?: Opacity3
      s?: StartPoint
      e?: EndPoint
      t?: Type20
      h?: HighlightLength
      a?: HighlightAngle
      g?: GradientColors
      [k: string]: any
    }
  | {
      mn?: MatchName19
      nm?: Name21
      ty?: Type21
      o?: Opacity4
      s?: StartPoint1
      e?: EndPoint1
      t?: Type22
      h?: HighlightLength1
      a?: HighlightAngle1
      g?: GradientColors1
      w?: StrokeWidth
      lc?: LineCap
      lj?: LineJoin
      ml?: MiterLimit
      [k: string]: any
    }
  | {
      mn?: MatchName20
      nm?: Name22
      ty?: Type23
      lc?: LineCap1
      lj?: LineJoin1
      ml?: MiterLimit1
      o?: Opacity5
      w?: Width1
      c?: Color1
      [k: string]: any
    }
  | {
      mn?: MatchName21
      nm?: Name23
      ty?: Type24
      mm?: MergeMode
      [k: string]: any
    }
  | {
      mn?: MatchName22
      nm?: Name24
      ty?: Type25
      s?: Start
      e?: End
      o?: Offset
      [k: string]: any
    }
  | {
      mn?: MatchName23
      nm?: Name25
      ty?: Type26
      np?: NumberOfProperties
      it?: Items
      [k: string]: any
    }
  | {
      nm?: Name26
      a?: AnchorPoint1
      p?: Position4
      s?: Scale1
      r?: Rotation2
      o?: Opacity6
      sk?: Skew
      sa?: SkewAxis
      [k: string]: any
    })[]
/**
 * Shape list of items
 */
export type Items1 = (
  | {
      mn?: MatchName13
      nm?: Name15
      d?: Direction
      ty?: Type14
      ks?: Vertices
      [k: string]: any
    }
  | {
      mn?: MatchName14
      nm?: Name16
      d?: Direction1
      ty?: Type15
      p?: Position1
      s?: Size
      r?: RoundedCorners
      [k: string]: any
    }
  | {
      mn?: MatchName15
      nm?: Name17
      d?: Direction2
      ty?: Type16
      p?: Position2
      s?: Size1
      [k: string]: any
    }
  | {
      mn?: MatchName16
      nm?: Name18
      d?: Direction3
      ty?: Type17
      p?: Position3
      ir?: OuterRadius
      is?: OuterRoundness
      r?: Rotation1
      pt?: Points1
      sy?: StarType
      [k: string]: any
    }
  | {
      mn?: MatchName17
      nm?: Name19
      ty?: Type18
      o?: Opacity2
      c?: Color
      [k: string]: any
    }
  | {
      mn?: MatchName18
      nm?: Name20
      ty?: Type19
      o?: Opacity3
      s?: StartPoint
      e?: EndPoint
      t?: Type20
      h?: HighlightLength
      a?: HighlightAngle
      g?: GradientColors
      [k: string]: any
    }
  | {
      mn?: MatchName19
      nm?: Name21
      ty?: Type21
      o?: Opacity4
      s?: StartPoint1
      e?: EndPoint1
      t?: Type22
      h?: HighlightLength1
      a?: HighlightAngle1
      g?: GradientColors1
      w?: StrokeWidth
      lc?: LineCap
      lj?: LineJoin
      ml?: MiterLimit
      [k: string]: any
    }
  | {
      mn?: MatchName20
      nm?: Name22
      ty?: Type23
      lc?: LineCap1
      lj?: LineJoin1
      ml?: MiterLimit1
      o?: Opacity5
      w?: Width1
      c?: Color1
      [k: string]: any
    }
  | {
      mn?: MatchName21
      nm?: Name23
      ty?: Type24
      mm?: MergeMode
      [k: string]: any
    }
  | {
      mn?: MatchName22
      nm?: Name24
      ty?: Type25
      s?: Start
      e?: End
      o?: Offset
      [k: string]: any
    }
  | {
      mn?: MatchName23
      nm?: Name25
      ty?: Type26
      np?: NumberOfProperties
      it?: Items
      [k: string]: any
    })[]
/**
 * Type of layer: Solid. Value 1.
 */
export type Type27 = number
/**
 * Transform properties
 */
export type Transform1 = {
  a?: AnchorPoint
  p?: Position
  s?: Scale
  r?: Rotation
  o?: Opacity
  px?: PositionX
  py?: PositionY
  [k: string]: any
}
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient1 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Blend Mode
 */
export type BlendMode1 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * 3d layer flag
 */
export type TDLayer1 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index1 = number
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class1 = string
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHtmlId1 = string
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint2 = number
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint2 = number
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime1 = number
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name27 = number
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking maskProperties.
 */
export type HasMasks1 = number
/**
 * List of Masks
 */
export type MaskProperties1 = {
  inv?: Inverted
  nm?: Name1
  pt?: Points
  o?: Opacity1
  mode?: Mode
  [k: string]: any
}[]
/**
 * Auto-Orient along path AE property.
 */
export type Effects7 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Layer Time Stretching
 */
export type Stretch1 = number
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent1 = number
/**
 * Color of the solid in hex
 */
export type SolidColor = string
/**
 * Height of the solid.
 */
export type SolidHeight = number
/**
 * Width of the solid.
 */
export type SolidWidth = number
/**
 * Type of layer: Image. Value 2.
 */
export type Type28 = number
/**
 * Transform properties
 */
export type Transform2 = {
  a?: AnchorPoint
  p?: Position
  s?: Scale
  r?: Rotation
  o?: Opacity
  px?: PositionX
  py?: PositionY
  [k: string]: any
}
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient2 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Blend Mode
 */
export type BlendMode2 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * 3d layer flag
 */
export type TDLayer2 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index2 = number
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class2 = string
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHtmlId2 = string
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint3 = number
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint3 = number
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime2 = number
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name28 = number
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking maskProperties.
 */
export type HasMasks2 = number
/**
 * List of Masks
 */
export type MaskProperties2 = {
  inv?: Inverted
  nm?: Name1
  pt?: Points
  o?: Opacity1
  mode?: Mode
  [k: string]: any
}[]
/**
 * List of Effects
 */
export type Effects8 = (
  | {
      ix?: EffectIndex
      mn?: MatchName
      nm?: Name2
      ty?: Type1
      v?: Value
      [k: string]: any
    }
  | {
      ix?: EffectIndex1
      mn?: MatchName1
      nm?: Name3
      ty?: Type2
      v?: Value1
      [k: string]: any
    }
  | {
      ix?: EffectIndex2
      mn?: MatchName2
      nm?: Name4
      ty?: Type3
      v?: Value2
      [k: string]: any
    }
  | {
      ix?: EffectIndex3
      mn?: MatchName3
      nm?: Name5
      ty?: Type4
      v?: Value3
      [k: string]: any
    }
  | {
      ix?: EffectIndex4
      mn?: MatchName4
      nm?: Name6
      ty?: Type5
      v?: Value4
      [k: string]: any
    }
  | {
      ix?: EffectIndex5
      mn?: MatchName5
      nm?: Name7
      ty?: Type6
      ef?: Effects
      /**
       * Enabled AE property value
       */
      en?: number
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex6
      mn?: MatchName6
      nm?: Name8
      ty?: Type7
      v?: Value5
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex7
      mn?: MatchName7
      nm?: Name9
      ty?: Type8
      v?: Value6
      [k: string]: any
    }
  | {
      ix?: EffectIndex8
      mn?: MatchName8
      nm?: Name10
      ty?: Type9
      ef?: Effects1
      [k: string]: any
    }
  | {
      ix?: EffectIndex9
      mn?: MatchName9
      nm?: Name11
      ty?: Type10
      ef?: Effects2
      [k: string]: any
    }
  | {
      ix?: EffectIndex10
      mn?: MatchName10
      nm?: Name12
      ty?: Type11
      ef?: Effects3
      [k: string]: any
    }
  | {
      ix?: EffectIndex11
      mn?: MatchName11
      nm?: Name13
      ty?: Type12
      ef?: Effects4
      [k: string]: any
    }
  | {
      ix?: EffectIndex12
      mn?: MatchName12
      nm?: Name14
      ty?: Type13
      ef?: Effects5
      [k: string]: any
    })[]
/**
 * Layer Time Stretching
 */
export type Stretch2 = number
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent2 = number
/**
 * id pointing to the source image defined on 'assets' object
 */
export type ReferenceId = string
/**
 * Type of layer: Null. Value 3.
 */
export type Type29 = number
/**
 * Transform properties
 */
export type Transform3 = {
  a?: AnchorPoint
  p?: Position
  s?: Scale
  r?: Rotation
  o?: Opacity
  px?: PositionX
  py?: PositionY
  [k: string]: any
}
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient3 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * 3d layer flag
 */
export type TDLayer3 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index3 = number
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class3 = string
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHtmlId3 = string
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint4 = number
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint4 = number
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime3 = number
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name29 = number
/**
 * List of Effects
 */
export type Effects9 = (
  | {
      ix?: EffectIndex
      mn?: MatchName
      nm?: Name2
      ty?: Type1
      v?: Value
      [k: string]: any
    }
  | {
      ix?: EffectIndex1
      mn?: MatchName1
      nm?: Name3
      ty?: Type2
      v?: Value1
      [k: string]: any
    }
  | {
      ix?: EffectIndex2
      mn?: MatchName2
      nm?: Name4
      ty?: Type3
      v?: Value2
      [k: string]: any
    }
  | {
      ix?: EffectIndex3
      mn?: MatchName3
      nm?: Name5
      ty?: Type4
      v?: Value3
      [k: string]: any
    }
  | {
      ix?: EffectIndex4
      mn?: MatchName4
      nm?: Name6
      ty?: Type5
      v?: Value4
      [k: string]: any
    }
  | {
      ix?: EffectIndex5
      mn?: MatchName5
      nm?: Name7
      ty?: Type6
      ef?: Effects
      /**
       * Enabled AE property value
       */
      en?: number
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex6
      mn?: MatchName6
      nm?: Name8
      ty?: Type7
      v?: Value5
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      ix?: EffectIndex7
      mn?: MatchName7
      nm?: Name9
      ty?: Type8
      v?: Value6
      [k: string]: any
    }
  | {
      ix?: EffectIndex8
      mn?: MatchName8
      nm?: Name10
      ty?: Type9
      ef?: Effects1
      [k: string]: any
    }
  | {
      ix?: EffectIndex9
      mn?: MatchName9
      nm?: Name11
      ty?: Type10
      ef?: Effects2
      [k: string]: any
    }
  | {
      ix?: EffectIndex10
      mn?: MatchName10
      nm?: Name12
      ty?: Type11
      ef?: Effects3
      [k: string]: any
    }
  | {
      ix?: EffectIndex11
      mn?: MatchName11
      nm?: Name13
      ty?: Type12
      ef?: Effects4
      [k: string]: any
    }
  | {
      ix?: EffectIndex12
      mn?: MatchName12
      nm?: Name14
      ty?: Type13
      ef?: Effects5
      [k: string]: any
    })[]
/**
 * Layer Time Stretching
 */
export type Stretch3 = number
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent3 = number
/**
 * Type of layer: Text. Value 5.
 */
export type Type30 = number
/**
 * Transform properties
 */
export type Transform4 = {
  a?: AnchorPoint
  p?: Position
  s?: Scale
  r?: Rotation
  o?: Opacity
  px?: PositionX
  py?: PositionY
  [k: string]: any
}
/**
 * Auto-Orient along path AE property.
 */
export type AutoOrient4 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Blend Mode
 */
export type BlendMode3 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * 3d layer flag
 */
export type TDLayer4 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Layer index in AE. Used for parenting and expressions.
 */
export type Index4 = number
/**
 * Parsed layer name used as html class on SVG/HTML renderer
 */
export type Class4 = string
/**
 * Parsed layer name used as html id on SVG/HTML renderer
 */
export type LayerHtmlId4 = string
/**
 * In Point of layer. Sets the initial frame of the layer.
 */
export type InPoint5 = number
/**
 * Out Point of layer. Sets the final frame of the layer.
 */
export type OutPoint5 = number
/**
 * Start Time of layer. Sets the start time of the layer.
 */
export type StartTime4 = number
/**
 * After Effects Layer Name. Used for expressions.
 */
export type Name30 = number
/**
 * Boolean when layer has a mask. Will be deprecated in favor of checking maskProperties.
 */
export type HasMasks3 = number
/**
 * List of Masks
 */
export type MaskProperties3 = {
  inv?: Inverted
  nm?: Name1
  pt?: Points
  o?: Opacity1
  mode?: Mode
  [k: string]: any
}[]
/**
 * Auto-Orient along path AE property.
 */
export type Effects10 =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Layer Time Stretching
 */
export type Stretch4 = number
/**
 * Layer Parent. Uses ind of parent.
 */
export type Parent4 = number
/**
 * Text animator Position
 */
export type Position5 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Anchor Point
 */
export type AnchorPoint2 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Scale
 */
export type Scale2 =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Skew
 */
export type Skew1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Skew Axis
 */
export type SkewAxis1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Rotation
 */
export type Rotation3 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Opacity
 */
export type Opacity7 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Stroke Width
 */
export type StrokeWidth1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Stroke Color
 */
export type StrokeColor =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Fill Color
 */
export type FillColor =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Fill Hue
 */
export type FillHue =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Fill Saturation
 */
export type FillSaturation =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Fill Brightness
 */
export type FillBrightness =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animator Tracking
 */
export type Tracking =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Selector Type. Expressible, or Normal.
 */
export type Type31 = number
/**
 * Selector Max Amount
 */
export type MaxAmount =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Levels Min Ease
 */
export type MinEase =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Levels Max Ease
 */
export type MaxEase =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Selector Randomize Order
 */
export type Randomize =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Selector Shape
 */
export type Shape =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Selector Based On
 */
export type BasedOn =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Selector Range Units. Percentage or Index.
 */
export type RangeUnits = number
/**
 * Selector Start
 */
export type Start1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Selector End
 */
export type End1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Selector Offset
 */
export type Offset1 =
  | {
      /**
       * Property Value
       */
      k?: number
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text animators
 */
export type Animators = {
  0?: AnimatedProperties
  1?: RangeSelecton
  [k: string]: any
}[]
/**
 * Text Anchor Point Grouping
 */
export type AnchorPointGrouping =
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
  | {
      [k: string]: any
    }
/**
 * Text Grouping Alignment
 */
export type GroupingAlignment =
  | {
      /**
       * Property Value
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
  | {
      /**
       * Property Value keyframes
       */
      k?: any[]
      /**
       * Property Expression. An AE expression that modifies the value.
       */
      x?: string
      /**
       * Property Index. Used for expressions.
       */
      ix?: string
      /**
       * In Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      ti?: any[]
      /**
       * Out Spatial Tangent. Only for spatial properties. Array of numbers.
       */
      to?: any[]
      /**
       * Defines if property is animated
       */
      a?: number
      [k: string]: any
    }
/**
 * Text Path
 */
export type TextPath = number
/**
 * Keyframe Time
 */
export type Time = number
/**
 * Text Font
 */
export type Font = string
/**
 * Text Font Color
 */
export type FontColor = any[]
/**
 * Text Justification
 */
export type Justificaiton = string
/**
 * Text Line Height
 */
export type LineHeight = number
/**
 * Text Font Size
 */
export type Size2 = number
/**
 * Text String Value
 */
export type Text = string
/**
 * Text Tracking
 */
export type Tracking1 = number
/**
 * Text Document Data Keyframes
 */
export type Keyframes = {
  0?: Time
  1?: TextProperties
  [k: string]: any
}[]
/**
 * List of Composition Layers
 */
export type Layers = (
  | {
      ty?: Type
      ks?: Transform
      ao?: AutoOrient
      bm?: BlendMode
      ddd?: TDLayer
      ind?: Index
      cl?: Class
      ln?: LayerHtmlId
      ip?: InPoint1
      op?: OutPoint1
      st?: StartTime
      nm?: Name
      hasMask?: HasMasks
      maskProperties?: MaskProperties
      ef?: Effects6
      sr?: Stretch
      parent?: Parent
      it?: Items1
      [k: string]: any
    }
  | {
      ty?: Type27
      ks?: Transform1
      ao?: AutoOrient1
      bm?: BlendMode1
      ddd?: TDLayer1
      ind?: Index1
      cl?: Class1
      ln?: LayerHtmlId1
      ip?: InPoint2
      op?: OutPoint2
      st?: StartTime1
      nm?: Name27
      hasMask?: HasMasks1
      maskProperties?: MaskProperties1
      ef?: Effects7
      sr?: Stretch1
      parent?: Parent1
      sc?: SolidColor
      sh?: SolidHeight
      sw?: SolidWidth
      [k: string]: any
    }
  | {
      ty?: Type28
      ks?: Transform2
      ao?: AutoOrient2
      bm?: BlendMode2
      ddd?: TDLayer2
      ind?: Index2
      cl?: Class2
      ln?: LayerHtmlId2
      ip?: InPoint3
      op?: OutPoint3
      st?: StartTime2
      nm?: Name28
      hasMask?: HasMasks2
      maskProperties?: MaskProperties2
      ef?: Effects8
      sr?: Stretch2
      parent?: Parent2
      refId?: ReferenceId
      [k: string]: any
    }
  | {
      ty?: Type29
      ks?: Transform3
      ao?: AutoOrient3
      ddd?: TDLayer3
      ind?: Index3
      cl?: Class3
      ln?: LayerHtmlId3
      ip?: InPoint4
      op?: OutPoint4
      st?: StartTime3
      nm?: Name29
      ef?: Effects9
      sr?: Stretch3
      parent?: Parent3
      [k: string]: any
    }
  | {
      ty?: Type30
      ks?: Transform4
      ao?: AutoOrient4
      bm?: BlendMode3
      ddd?: TDLayer4
      ind?: Index4
      cl?: Class4
      ln?: LayerHtmlId4
      ip?: InPoint5
      op?: OutPoint5
      st?: StartTime4
      nm?: Name30
      hasMask?: HasMasks3
      maskProperties?: MaskProperties3
      ef?: Effects10
      sr?: Stretch4
      parent?: Parent4
      t?: TextData
      [k: string]: any
    })[]
/**
 * Image Height
 */
export type Height1 = number
/**
 * Image Width
 */
export type Width2 = number
/**
 * Image ID
 */
export type Id = string
/**
 * Image name
 */
export type ImageName = string
/**
 * Image path
 */
export type ImagePath = string
/**
 * Precomp ID
 */
export type Id1 = string
/**
 * List of Precomp Layers
 */
export type Layers1 = (
  | {
      ty?: Type
      ks?: Transform
      ao?: AutoOrient
      bm?: BlendMode
      ddd?: TDLayer
      ind?: Index
      cl?: Class
      ln?: LayerHtmlId
      ip?: InPoint1
      op?: OutPoint1
      st?: StartTime
      nm?: Name
      hasMask?: HasMasks
      maskProperties?: MaskProperties
      ef?: Effects6
      sr?: Stretch
      parent?: Parent
      it?: Items1
      [k: string]: any
    }
  | {
      ty?: Type27
      ks?: Transform1
      ao?: AutoOrient1
      bm?: BlendMode1
      ddd?: TDLayer1
      ind?: Index1
      cl?: Class1
      ln?: LayerHtmlId1
      ip?: InPoint2
      op?: OutPoint2
      st?: StartTime1
      nm?: Name27
      hasMask?: HasMasks1
      maskProperties?: MaskProperties1
      ef?: Effects7
      sr?: Stretch1
      parent?: Parent1
      sc?: SolidColor
      sh?: SolidHeight
      sw?: SolidWidth
      [k: string]: any
    }
  | {
      ty?: Type28
      ks?: Transform2
      ao?: AutoOrient2
      bm?: BlendMode2
      ddd?: TDLayer2
      ind?: Index2
      cl?: Class2
      ln?: LayerHtmlId2
      ip?: InPoint3
      op?: OutPoint3
      st?: StartTime2
      nm?: Name28
      hasMask?: HasMasks2
      maskProperties?: MaskProperties2
      ef?: Effects8
      sr?: Stretch2
      parent?: Parent2
      refId?: ReferenceId
      [k: string]: any
    }
  | {
      ty?: Type29
      ks?: Transform3
      ao?: AutoOrient3
      ddd?: TDLayer3
      ind?: Index3
      cl?: Class3
      ln?: LayerHtmlId3
      ip?: InPoint4
      op?: OutPoint4
      st?: StartTime3
      nm?: Name29
      ef?: Effects9
      sr?: Stretch3
      parent?: Parent3
      [k: string]: any
    }
  | {
      ty?: Type30
      ks?: Transform4
      ao?: AutoOrient4
      bm?: BlendMode3
      ddd?: TDLayer4
      ind?: Index4
      cl?: Class4
      ln?: LayerHtmlId4
      ip?: InPoint5
      op?: OutPoint5
      st?: StartTime4
      nm?: Name30
      hasMask?: HasMasks3
      maskProperties?: MaskProperties3
      ef?: Effects10
      sr?: Stretch4
      parent?: Parent4
      t?: TextData
      [k: string]: any
    })[]
/**
 * source items that can be used in multiple places. Comps and Images for now.
 */
export type Assets = (
  | {
      h?: Height1
      w?: Width2
      id?: Id
      p?: ImageName
      u?: ImagePath
      [k: string]: any
    }
  | {
      id?: Id1
      layers?: Layers1
      [k: string]: any
    })[]
/**
 * Character Value
 */
export type Character = string
/**
 * Character Font Family
 */
export type FontFamily = string
/**
 * Character Font Size
 */
export type FontSize = string
/**
 * Character Font Style
 */
export type FontStyle = string
/**
 * Character Width
 */
export type Width3 = number
/**
 * Character Items Keys
 */
export type Keys = {
  /**
   * Property Value
   */
  k?: {
    /**
     * Closed property of shape
     */
    0?: boolean
    /**
     * Bezier curve In points. Array of 2 dimensional arrays.
     */
    1?: any[]
    /**
     * Bezier curve Out points. Array of 2 dimensional arrays.
     */
    2?: any[]
    /**
     * Bezier curve Vertices. Array of 2 dimensional arrays.
     */
    3?: any[]
    [k: string]: any
  }
  /**
   * Property Expression. An AE expression that modifies the value.
   */
  x?: string
  /**
   * Property Index. Used for expressions.
   */
  ix?: string
  /**
   * Defines if property is animated
   */
  a?: number
  [k: string]: any
}
/**
 * Character Composing Shapes
 */
export type CharacterShapes = {
  0?: any
  [k: string]: any
}[]
/**
 * source chars for text layers
 */
export type Chars = {
  ch?: Character
  fFamily?: FontFamily
  size?: FontSize
  style?: FontStyle
  w?: Width3
  data?: CharacterData
  [k: string]: any
}[]

export interface Animation {
  ip?: InPoint
  op?: OutPoint
  fr?: FrameRate
  w?: Width
  h?: Height
  v?: Version
  layers?: Layers
  assets?: Assets
  chars?: Chars
  multiDimensional?: {
    /**
     * Property Value
     */
    k?: any[]
    /**
     * Property Expression. An AE expression that modifies the value.
     */
    x?: string
    /**
     * Property Index. Used for expressions.
     */
    ix?: string
    /**
     * Defines if property is animated
     */
    a?: number
    [k: string]: any
  }
  multiDimensionalKeyframed?: {
    /**
     * Property Value keyframes
     */
    k?: any[]
    /**
     * Property Expression. An AE expression that modifies the value.
     */
    x?: string
    /**
     * Property Index. Used for expressions.
     */
    ix?: string
    /**
     * In Spatial Tangent. Only for spatial properties. Array of numbers.
     */
    ti?: any[]
    /**
     * Out Spatial Tangent. Only for spatial properties. Array of numbers.
     */
    to?: any[]
    /**
     * Defines if property is animated
     */
    a?: number
    [k: string]: any
  }
  shape?: {
    /**
     * Property Value
     */
    k?: {
      /**
       * Closed property of shape
       */
      0?: boolean
      /**
       * Bezier curve In points. Array of 2 dimensional arrays.
       */
      1?: any[]
      /**
       * Bezier curve Out points. Array of 2 dimensional arrays.
       */
      2?: any[]
      /**
       * Bezier curve Vertices. Array of 2 dimensional arrays.
       */
      3?: any[]
      [k: string]: any
    }
    /**
     * Property Expression. An AE expression that modifies the value.
     */
    x?: string
    /**
     * Property Index. Used for expressions.
     */
    ix?: string
    /**
     * Defines if property is animated
     */
    a?: number
    [k: string]: any
  }
  shapeKeyframed?: {
    /**
     * Property Value keyframes
     */
    k?: any[]
    /**
     * Property Expression. An AE expression that modifies the value.
     */
    x?: string
    /**
     * Property Index. Used for expressions.
     */
    ix?: string
    /**
     * In Spatial Tangent. Only for spatial properties. Array of numbers.
     */
    ti?: any[]
    /**
     * Out Spatial Tangent. Only for spatial properties. Array of numbers.
     */
    to?: any[]
    /**
     * Defines if property is animated
     */
    a?: number
    [k: string]: any
  }
  value?: {
    /**
     * Property Value
     */
    k?: number
    /**
     * Property Expression. An AE expression that modifies the value.
     */
    x?: string
    /**
     * Property Index. Used for expressions.
     */
    ix?: string
    /**
     * Defines if property is animated
     */
    a?: number
    [k: string]: any
  }
  valueKeyframed?: {
    /**
     * Property Value keyframes
     */
    k?: any[]
    /**
     * Property Expression. An AE expression that modifies the value.
     */
    x?: string
    /**
     * Property Index. Used for expressions.
     */
    ix?: string
    /**
     * Defines if property is animated
     */
    a?: number
    [k: string]: any
  }
  [k: string]: any
}
/**
 * Gradient Colors
 */
export interface GradientColors {
  [k: string]: any
}
/**
 * Gradient Colors
 */
export interface GradientColors1 {
  [k: string]: any
}
/**
 * Text Data
 */
export interface TextData {
  0?: Animators
  1?: MoreOptions
  2?: TextPath
  3?: Document
  [k: string]: any
}
/**
 * Text animator animated properties
 */
export interface AnimatedProperties {
  0?: Position5
  1?: AnchorPoint2
  2?: Scale2
  3?: Skew1
  4?: SkewAxis1
  5?: Rotation3
  6?: Opacity7
  7?: StrokeWidth1
  8?: StrokeColor
  9?: FillColor
  10?: FillHue
  11?: FillSaturation
  12?: FillBrightness
  13?: Tracking
  [k: string]: any
}
/**
 * Animators Range Selecton
 */
export interface RangeSelecton {
  0?: Type31
  1?: MaxAmount
  2?: MinEase
  3?: MaxEase
  4?: Randomize
  5?: Shape
  6?: BasedOn
  7?: RangeUnits
  8?: Start1
  9?: End1
  10?: Offset1
  [k: string]: any
}
/**
 * Text More Options
 */
export interface MoreOptions {
  0?: AnchorPointGrouping
  1?: GroupingAlignment
  [k: string]: any
}
/**
 * Text Document Data
 */
export interface Document {
  0?: Keyframes
  [k: string]: any
}
/**
 * Text Properties
 */
export interface TextProperties {
  0?: Font
  1?: FontColor
  2?: Justificaiton
  3?: LineHeight
  4?: Size2
  5?: Text
  6?: Tracking1
  [k: string]: any
}
/**
 * Character Data
 */
export interface CharacterData {
  0?: CharacterShapes
  [k: string]: any
}
